
/*
 * Copyright (c) 2020 The ZMK Contributors
 * Copyright (c) 2022 Innaworks Development Limited, trading as MoErgo
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED BY GLOVE80 LAYOUT EDITOR
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
/* Include all behaviour includes needed by system behaviors/macros */
#include <dt-bindings/zmk/outputs.h>

/* Include behaviour includes needed by key binds - automatically generated */
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>


/ {
    /* Glove80 system behavior & macros */
    behaviors {
        // For the "layer" key, it'd nice to be able to use it as either a shift or a toggle.
        // Configure it as a tap dance, so the first tap (or hold) is a &mo and the second tap is a &to
        lower: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER_TAP_DANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo 1>, <&to 1>;
        };
    };
};

/ {
    macros {
        rgb_ug_status_macro: rgb_ug_status_macro_0 {
            label = "RGB_UG_STATUS";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&rgb_ug RGB_STATUS>;
        };

        bt_0: bt_profile_macro_0 {
            label = "BT_0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 0>;
        };

        bt_1: bt_profile_macro_1 {
            label = "BT_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 1>;
        };

        bt_2: bt_profile_macro_2 {
            label = "BT_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 2>;
        };

        bt_3: bt_profile_macro_3 {
            label = "BT_3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 3>;
        };

		lm: lm {
			label = "LAYER_MOD";
			compatible = "zmk,behavior-macro-two-param";
			wait-ms = <0>;
			tap-ms = <0>;
			#binding-cells = <2>;
			bindings
				= <&macro_param_1to1>
				, <&macro_press &mo MACRO_PLACEHOLDER>
				, <&macro_param_2to1>
				, <&macro_press &kp MACRO_PLACEHOLDER>
				, <&macro_pause_for_release>
				, <&macro_param_2to1>
				, <&macro_release &kp MACRO_PLACEHOLDER>
				, <&macro_param_1to1>
				, <&macro_release &mo MACRO_PLACEHOLDER>
				;
		};

    };
};

/ {
    magic: magic_hold_tap {
        compatible = "zmk,behavior-hold-tap";
        label = "MAGIC_HOLD_TAP";
        #binding-cells = <2>;
        flavor = "tap-preferred";
        tapping-term-ms = <200>;
        bindings = <&mo>, <&rgb_ug_status_macro>;
    };
};

    /* Custom Defined Behaviors */
/ {
    behaviors {
    // mod/mod-shift tap-dance
    command_td: command_td_1 {
        compatible = "zmk,behavior-tap-dance";
        label = "COMMAND_TAP_DANCE";
        #binding-cells = <0>;
        tapping-term-ms = <200>;
        bindings = <&kp LGUI>, <&kp LS(LGUI)>;
    };

    loption_td: option_td_1 {
        compatible = "zmk,behavior-tap-dance";
        label = "LOPTION_TAP_DANCE";
        #binding-cells = <0>;
        tapping-term-ms = <200>;
        bindings = <&kp LALT>, <&kp LS(LALT)>;
    };
    roption_td: option_td_2 {
        compatible = "zmk,behavior-tap-dance";
        label = "ROPTION_TAP_DANCE";
        #binding-cells = <0>;
        tapping-term-ms = <200>;
        bindings = <&kp RALT>, <&kp LS(RALT)>;
    };

    ctrl_td: ctrl_td_1 {
        compatible = "zmk,behavior-tap-dance";
        label = "CTRL_TAP_DANCE";
        #binding-cells = <0>;
        tapping-term-ms = <200>;
        bindings = <&kp LCTRL>, <&kp LS(LCTRL)>;
    };

    lshift_td: shift_td_1 {
        compatible = "zmk,behavior-tap-dance";
        label = "LOPTION_TAP_DANCE";
        #binding-cells = <0>;
        tapping-term-ms = <200>;
        bindings = <&kp LSHIFT>, <&kp CAPSLOCK >;
    };
    rshift_td: shift_td_2 {
        compatible = "zmk,behavior-tap-dance";
        label = "LOPTION_TAP_DANCE";
        #binding-cells = <0>;
        tapping-term-ms = <200>;
        bindings = <&kp RSHIFT>, <&kp CAPSLOCK >;
    };
};
    /* Automatically generated keymap */
/ {
    keymap {
        compatible = "zmk,keymap";


        layer_Base {
            bindings = <
    &kp ESC    &kp F1   &kp F2  &kp F3  &kp F4                                                                                                  &kp F5     &kp F6    &kp F7    &kp F8  &kp C_SLEEP
  &kp EQUAL    &kp N1   &kp N2  &kp N3  &kp N4  &kp N5                                                                                  &kp N6  &kp N7     &kp N8    &kp N9    &kp N0    &kp MINUS
  &kp GRAVE     &kp Q    &kp W   &kp E   &kp R   &kp T                                                                                   &kp Y   &kp U      &kp I     &kp O     &kp P     &kp BSLH
    &kp TAB     &kp A    &kp S   &kp D   &kp F   &kp G                                                                                   &kp H   &kp J      &kp K     &kp L  &kp SEMI      &kp SQT
 &lshift_td     &kp Z    &kp X   &kp C   &kp V   &kp B  &lm 1 LSHIFT     &ctrl_td  &loption_td  &roption_td     &ctrl_td  &lm 1 RSHIFT   &kp N   &kp M  &kp COMMA   &kp DOT  &kp FSLH   &rshift_td
 &magic 2 0  &kp HOME  &kp END   &none   &none              &kp BSPC  &command_td      &kp RET      &kp RET  &command_td     &kp SPACE           &none      &none  &kp LBKT  &kp RBKT    &kp PG_DN
            >;
        };

        layer_Lower {
            bindings = <
 &kp C_BRI_DN  &kp C_BRI_UP      &kp C_PREV      &kp C_NEXT         &kp C_PP                                                                          &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP            &none  &kp PAUSE_BREAK
     &kp HOME         &none           &none           &none            &none   &kp FSLH                                                     &kp BSLH  &kp KP_NUM  &kp KP_EQUAL  &kp KP_SLASH  &kp KP_MULTIPLY  &kp PRINTSCREEN
      &kp END         &none       &kp PG_UP    &kp UP_ARROW        &kp PG_DN   &kp LBKT                                                     &kp RBKT   &kp KP_N7     &kp KP_N8     &kp KP_N9     &kp KP_MINUS   &kp SCROLLLOCK
       &trans         &none  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW   &kp LPAR                                                     &kp RPAR   &kp KP_N4     &kp KP_N5     &kp KP_N6      &kp KP_PLUS            &none
       &trans     &kp K_APP           &none         &kp F11          &kp F12  &kp MINUS   &trans  &trans  &trans  &trans   &trans  &trans  &kp EQUAL   &kp KP_N1     &kp KP_N2     &kp KP_N3     &kp KP_ENTER           &trans
   &magic 2 0      &kp CAPS         &kp INS         &kp F11          &kp F12             &kp DEL  &trans  &trans  &trans  &kp DEL  &trans              &kp KP_N0     &kp KP_N0    &kp KP_DOT     &kp KP_ENTER        &kp PG_UP
            >;
        };

        layer_Magic {
            bindings = <
  &bt BT_CLR            &none            &none            &none            &none                                                                                  &none   &none   &none   &none  &bt BT_CLR_ALL
       &none            &none            &none            &none            &none            &none                                                         &none   &none   &none   &none   &none           &none
       &none  &rgb_ug RGB_SPI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_BRI  &rgb_ug RGB_TOG                                                         &none   &none   &none   &none   &none           &none
 &bootloader  &rgb_ug RGB_SPD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_BRD  &rgb_ug RGB_EFF                                                         &none   &none   &none   &none   &none     &bootloader
      &reset            &none            &none            &none            &none            &none   &bt_2   &bt_3         &none   &none   &none   &none   &none   &none   &none   &none   &none          &reset
       &none            &none            &none            &none            &none                    &bt_0   &bt_1  &out OUT_USB   &none   &none   &none           &none   &none   &none   &none           &none
            >;
        };

    };
};
